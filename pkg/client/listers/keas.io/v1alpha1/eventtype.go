// Auto-generated for github.com/projectkeas/crds
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/projectkeas/crds/pkg/apis/keas.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EventTypeLister helps list EventTypes.
// All objects returned here must be treated as read-only.
type EventTypeLister interface {
	// List lists all EventTypes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EventType, err error)
	// EventTypes returns an object that can list and get EventTypes.
	EventTypes(namespace string) EventTypeNamespaceLister
	EventTypeListerExpansion
}

// eventTypeLister implements the EventTypeLister interface.
type eventTypeLister struct {
	indexer cache.Indexer
}

// NewEventTypeLister returns a new EventTypeLister.
func NewEventTypeLister(indexer cache.Indexer) EventTypeLister {
	return &eventTypeLister{indexer: indexer}
}

// List lists all EventTypes in the indexer.
func (s *eventTypeLister) List(selector labels.Selector) (ret []*v1alpha1.EventType, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EventType))
	})
	return ret, err
}

// EventTypes returns an object that can list and get EventTypes.
func (s *eventTypeLister) EventTypes(namespace string) EventTypeNamespaceLister {
	return eventTypeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EventTypeNamespaceLister helps list and get EventTypes.
// All objects returned here must be treated as read-only.
type EventTypeNamespaceLister interface {
	// List lists all EventTypes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EventType, err error)
	// Get retrieves the EventType from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EventType, error)
	EventTypeNamespaceListerExpansion
}

// eventTypeNamespaceLister implements the EventTypeNamespaceLister
// interface.
type eventTypeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EventTypes in the indexer for a given namespace.
func (s eventTypeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EventType, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EventType))
	})
	return ret, err
}

// Get retrieves the EventType from the indexer for a given namespace and name.
func (s eventTypeNamespaceLister) Get(name string) (*v1alpha1.EventType, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("eventtype"), name)
	}
	return obj.(*v1alpha1.EventType), nil
}
